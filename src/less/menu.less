@import './globals.less';

@addon: 'volto-addons';
@addontype: 'tabsblock';
@addonelement: 'menu';

.loadAddonVariables();

.tabs-block {
  &.edit {
    > .styled > .tabs > .ui.menu {
      margin: @menuMarginEdit;
    }
  }

  .menu-item-count {
    display: @menuItemCountDisplay;
  }

  > .styled > .tabs > .ui.menu {
    border: @menuBorder;
    margin: @menuMargin;
    background-color: @menuBackgroundColor;
    border-radius: @menuBorderRadius;
    box-shadow: @menuBoxShadow;
    overflow-x: auto;

    &.in-full-width {
      padding: 0 1rem;
    }

    &.ui.container > * {
      margin-bottom: initial !important;
    }

    &.menu-hidden {
      display: none;
    }

    &:after {
      display: none;
    }

    .ui.fluid.input {
      min-width: 80px;
    }

    .item {
      padding: @menuItemPadding;
      background: @menuItemBackground;
      color: @menuItemColor;
      font-family: @menuItemFontFamily;
      font-weight: @menuItemFontWeight;

      &:not(.menu-title) {
        font-size: @menuItemFontSize;
        p {
          font-size: @menuItemFontSize;
        }
      }

      .tab-title-input {
        min-width: 80px;
        max-width: 500px;
        align-self: center;
        border: none;
        color: @menuActiveItemColor;
      }

      &:hover {
        background: @menuItemHoverBackground;
        color: @menuItemHoverColor;

        &.menu-title {
          background: @menuTitleHoverBackground;
          color: @menuTitleHoverColor;
        }
      }

      &.active {
        background: @menuActiveItemBackground;
        color: @menuActiveItemColor;
        font-family: @menuItemFontFamily;
        font-weight: @menuActiveItemFontWeight;

        &:hover {
          background: @menuActiveItemHoverBackground;
          color: @menuActiveItemHoverColor;
        }
      }

      &.menu-title {
        display: flex;
        flex-direction: column;
        align-items: flex-start;
        background: @menuTitleBackgrounnd;
        color: @menuTitleColor;

        > * {
          margin: 0;
          color: inherit;
        }
      }

      &::before {
        width: @menuItemDividerWidth;
        background: @menuItemDividerBackground;
      }
    }
  }

  > .styled > .side.tabs {
    > .ui.menu {
      display: flex;
      flex-basis: 20%;
      flex-direction: column;
    }

    &.left {
      > .ui.menu {
        order: 0;
      }
    }

    &.right {
      > .ui.menu {
        order: 1;
      }
    }
  }

  /* MENU POSITION */

  > .styled > .tabs.inline {
    .menu {
      &.left {
        justify-content: flex-start;
      }

      &.right {
        justify-content: flex-end;
      }

      &.center {
        justify-content: center;
      }

      &.space-between {
        .menu-title {
          margin-right: auto;
        }
      }

      .item {
        &:first-child {
          padding-left: 0;
        }
      }
    }
  }

  > .styled > .tabs.side {
    &.left {
      .menu {
        .item {
          padding-top: 0;
          padding-left: 0;
        }
      }
    }

    &.right {
      .menu {
        .item {
          padding-top: 0;
          padding-right: 0;

          &.menu-title {
            padding-left: @menuItemPadding;
          }
        }
      }
    }

    .menu {
      &.left {
        align-items: flex-start;
      }

      &.right {
        align-items: flex-end;
      }

      &.center {
        align-items: center;
      }

      &.space-between {
        .menu-title {
          margin-bottom: auto;
        }
      }
    }
  }

  &.flex-start {
    > .tabs.side > .ui.menu {
      justify-content: flex-start;
    }
  }

  &.center {
    > .tabs.side > .ui.menu {
      justify-content: center;
    }
  }

  &.flex-end {
    > .tabs.side > .ui.menu {
      justify-content: flex-end;
    }
  }

  @media only screen and (max-width: @menuLargestMobileScreen) {
    > .styled > .side.default.tabs {
      flex-direction: column;

      > .ui.menu {
        flex-basis: 100%;
        order: 0;
      }
    }
  }
}

.loadAddonOverrides();
